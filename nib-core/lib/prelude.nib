// The default library for Nib

module global

/// Add two numbers
a + b = _prim_add a b

/// Subtract b from a
a - b = _prim_sub a b

/// Multiply two numbers
a * b = _prim_mul a b

/// Divide a by b
a / b = _prim_div a b

a > b = _prim_gt a b
a >= b = _prim_gte a b
a < b = _prim_lt a b
a <= b = _prim_lte a b

a == b = _prim_eq a b
a != b = not (a == b)

not true = false
not false = true

// some arithmetic
max x y = x > y => x; y
min x y = x < y => x; y

// logic
x || y = x => x; y ()
x && y = x => y (); false

// convenience
on x f = f x
id x = x
a & b = b // sequencing
const a b = a

// types
type_name v = (type v).type_id

// Stuff that need prims
// =====================
// apply
// +, -, *, / (at least type specific ones, maybe can do generic as lib)
// <, >, <=, >=, == 
// sin, cos, tan, asin, acos, atan
// and, or, xor, lsh, rsh, rot, bswap (bit logic)
// type, set_type 
// array (ref, set, new, size, copy(full or part))
// bytearray (ref, set, new, fill, size, copy, slice, 8-64bit ops signed unsigned) 
// symbol (new, new_well_known)
// table (ref, set, size, copy)
// char (ord, chr)
// ptr (peek, poke, offset)
// IO (print, put_char, get_char. stdin. stderr, stdout, filehandling(file_open, file_close)) 
// Debug
//

